const mongoose = require('mongoose');
require('dotenv').config();

async function debugService() {
    try {
        console.log('üîç === DEBUG SERVICE HYBRIDE ===');
        
        // 1. Test connexion MongoDB
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ MongoDB connect√©');
        
        // 2. Test mod√®les
        const User = require('./models/User');
        const Enterprise = require('./models/Entreprise');
        
        const user = await User.findOne({ email: 'alenoumbi@gmail.com' });
        console.log('üë§ Utilisateur trouv√©:', user ? { email: user.email, typeCompte: user.typeCompte } : 'AUCUN');
        
        const enterpriseCount = await Enterprise.countDocuments();
        console.log('üè¢ Nombre d\'entreprises:', enterpriseCount);
        
        // 3. Test service hybride
        const HybridQAServiceFallback = require('./utils/hybridQAServiceFallback');
        const service = new HybridQAServiceFallback();
        console.log('ü§ñ Service cr√©√©');
        
        await service.initialize();
        console.log('‚úÖ Service initialis√©');
        
        // 4. Test question simple
        console.log('\nüß™ === TEST QUESTION ===');
        const question = "Combien d'entreprises sont enregistr√©es ?";
        const userRole = "admin";
        
        console.log('‚ùì Question:', question);
        console.log('üëë R√¥le:', userRole);
        
        const result = await service.processQuestion(question, userRole, null);
        
        console.log('\nüìä === R√âSULTAT ===');
        console.log('Success:', result.success);
        console.log('Response:', result.response);
        console.log('Confidence:', result.confidence);
        console.log('Approach:', result.approach);
        
        if (!result.success) {
            console.log('‚ùå Erreur:', result.error);
        }
        
        // 5. Test handler direct
        console.log('\nüîß === TEST HANDLER DIRECT ===');
        try {
            const directResult = await service.getEnterpriseCount(question, userRole, null);
            console.log('‚úÖ Handler direct:', directResult);
        } catch (handlerError) {
            console.log('‚ùå Erreur handler:', handlerError.message);
        }
        
        process.exit(0);
        
    } catch (error) {
        console.error('\n‚ùå === ERREUR G√âN√âRALE ===');
        console.error('Message:', error.message);
        console.error('Stack:', error.stack);
        process.exit(1);
    }
}

debugService();
